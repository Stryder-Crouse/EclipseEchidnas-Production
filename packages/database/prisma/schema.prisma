// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

// example table used in the express router example
model HighScore {
  id    Int      @id @default(autoincrement())
  time  DateTime
  score Int
}

model NodeDB {
  nodeID    String @id @db.VarChar(256)
  floor     String @db.VarChar(256)
  building  String @db.VarChar(256)
  nodeType  String @db.VarChar(256)
  longName  String @db.VarChar(256)
  shortName String @db.VarChar(256)
  xcoord    Int
  ycoord    Int

  //These do not exist @relation tells prisma to now make an attribute and instead
  // relate the other table to this table through the specified key
  startEdges  EdgeDB[] @relation("startingEdges")
  endEdges    EdgeDB[] @relation("endingEdges")
  reqLocation MedReq[] @relation("requestLocation") //must change to Request later
}

model EdgeDB {
  edgeID      String @id @db.VarChar(256)
  startNodeID String @db.VarChar(256)
  endNodeID   String @db.VarChar(256)

  //Do not exist (but necessary for tables)
  startNode NodeDB @relation("startingEdges", fields: [startNodeID], references: [nodeID])
  endNode   NodeDB @relation("endingEdges", fields: [endNodeID], references: [nodeID])
}

model MedReq {
  medReqID      Int    @id @default(autoincrement())
  reqLocationID String @db.VarChar(256)
  medType       String @db.VarChar(256)
  dosage        String @db.VarChar(256)
  numDosages    Int

  reqLocation NodeDB @relation("requestLocation", fields: [reqLocationID], references: [nodeID])
}

// model Request {
//   reqID         Int    @id @default(autoincrement())
//   reqType       String @db.VarChar(256)
//   reqLocationID String @db.VarChar(256)
//   extraInfo     String @db.VarChar(256)
//
//   medReq MedReq? @relation(fields: [reqID], references: [request.medReqID])
//   reqLocation   NodeDB @relation("requestLocation", fields: [reqLocationID], references: [nodeID])
// }
//
// model MedReq {
//   medReqID   Int     @id @default(autoincrement())
//   medType    String  @db.VarChar(256)
//   dosage     String  @db.VarChar(256)
//   numDosages Int
//   request  Request     //@unique
//
//   //request    Request @relation("medicineRequest", fields: [requestID], references: [reqID])
// }
